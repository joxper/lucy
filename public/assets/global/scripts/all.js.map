{"version":3,"sources":["app.js","datatable.js"],"names":[],"mappingsjgfile":"all.js","sourcesContent":["/**\r\nCore script to handle the entire theme and core functions\r\n**/\r\nvar App = function() {\r\n\r\n    // IE mode\r\n    var isRTL = false;\r\n    var isIE8 = false;\r\n    var isIE9 = false;\r\n    var isIE10 = false;\r\n\r\n    var resizeHandlers = [];\r\n\r\n    var assetsPath = '../assets/';\r\n\r\n    var globalImgPath = 'global/img/';\r\n\r\n    var globalPluginsPath = 'global/plugins/';\r\n\r\n    var globalCssPath = 'global/css/';\r\n\r\n    // theme layout color set\r\n\r\n    var brandColors = {\r\n        'blue': '#89C4F4',\r\n        'red': '#F3565D',\r\n        'green': '#1bbc9b',\r\n        'purple': '#9b59b6',\r\n        'grey': '#95a5a6',\r\n        'yellow': '#F8CB00'\r\n    };\r\n\r\n    // initializes main settings\r\n    var handleInit = function() {\r\n\r\n        if ($('body').css('direction') === 'rtl') {\r\n            isRTL = true;\r\n        }\r\n\r\n        isIE8 = !!navigator.userAgent.match(/MSIE 8.0/);\r\n        isIE9 = !!navigator.userAgent.match(/MSIE 9.0/);\r\n        isIE10 = !!navigator.userAgent.match(/MSIE 10.0/);\r\n\r\n        if (isIE10) {\r\n            $('html').addClass('ie10'); // detect IE10 version\r\n        }\r\n\r\n        if (isIE10 || isIE9 || isIE8) {\r\n            $('html').addClass('ie'); // detect IE10 version\r\n        }\r\n    };\r\n\r\n    // runs callback functions set by App.addResponsiveHandler().\r\n    var _runResizeHandlers = function() {\r\n        // reinitialize other subscribed elements\r\n        for (var i = 0; i < resizeHandlers.length; i++) {\r\n            var each = resizeHandlers[i];\r\n            each.call();\r\n        }\r\n    };\r\n\r\n    // handle the layout reinitialization on window resize\r\n    var handleOnResize = function() {\r\n        var resize;\r\n        if (isIE8) {\r\n            var currheight;\r\n            $(window).resize(function() {\r\n                if (currheight == document.documentElement.clientHeight) {\r\n                    return; //quite event since only body resized not window.\r\n                }\r\n                if (resize) {\r\n                    clearTimeout(resize);\r\n                }\r\n                resize = setTimeout(function() {\r\n                    _runResizeHandlers();\r\n                }, 50); // wait 50ms until window resize finishes.                \r\n                currheight = document.documentElement.clientHeight; // store last body client height\r\n            });\r\n        } else {\r\n            $(window).resize(function() {\r\n                if (resize) {\r\n                    clearTimeout(resize);\r\n                }\r\n                resize = setTimeout(function() {\r\n                    _runResizeHandlers();\r\n                }, 50); // wait 50ms until window resize finishes.\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handles portlet tools & actions\r\n    var handlePortletTools = function() {\r\n        // handle portlet remove\r\n        $('body').on('click', '.portlet > .portlet-title > .tools > a.remove', function(e) {\r\n            e.preventDefault();\r\n            var portlet = $(this).closest(\".portlet\");\r\n\r\n            if ($('body').hasClass('page-portlet-fullscreen')) {\r\n                $('body').removeClass('page-portlet-fullscreen');\r\n            }\r\n\r\n            portlet.find('.portlet-title .fullscreen').tooltip('destroy');\r\n            portlet.find('.portlet-title > .tools > .reload').tooltip('destroy');\r\n            portlet.find('.portlet-title > .tools > .remove').tooltip('destroy');\r\n            portlet.find('.portlet-title > .tools > .config').tooltip('destroy');\r\n            portlet.find('.portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand').tooltip('destroy');\r\n\r\n            portlet.remove();\r\n        });\r\n\r\n        // handle portlet fullscreen\r\n        $('body').on('click', '.portlet > .portlet-title .fullscreen', function(e) {\r\n            e.preventDefault();\r\n            var portlet = $(this).closest(\".portlet\");\r\n            if (portlet.hasClass('portlet-fullscreen')) {\r\n                $(this).removeClass('on');\r\n                portlet.removeClass('portlet-fullscreen');\r\n                $('body').removeClass('page-portlet-fullscreen');\r\n                portlet.children('.portlet-body').css('height', 'auto');\r\n            } else {\r\n                var height = App.getViewPort().height -\r\n                    portlet.children('.portlet-title').outerHeight() -\r\n                    parseInt(portlet.children('.portlet-body').css('padding-top')) -\r\n                    parseInt(portlet.children('.portlet-body').css('padding-bottom'));\r\n\r\n                $(this).addClass('on');\r\n                portlet.addClass('portlet-fullscreen');\r\n                $('body').addClass('page-portlet-fullscreen');\r\n                portlet.children('.portlet-body').css('height', height);\r\n            }\r\n        });\r\n\r\n        $('body').on('click', '.portlet > .portlet-title > .tools > a.reload', function(e) {\r\n            e.preventDefault();\r\n            var el = $(this).closest(\".portlet\").children(\".portlet-body\");\r\n            var url = $(this).attr(\"data-url\");\r\n            var error = $(this).attr(\"data-error-display\");\r\n            if (url) {\r\n                App.blockUI({\r\n                    target: el,\r\n                    animate: true,\r\n                    overlayColor: 'none'\r\n                });\r\n                $.ajax({\r\n                    type: \"GET\",\r\n                    cache: false,\r\n                    url: url,\r\n                    dataType: \"html\",\r\n                    success: function(res) {\r\n                        App.unblockUI(el);\r\n                        el.html(res);\r\n                        App.initAjax() // reinitialize elements & plugins for newly loaded content\r\n                    },\r\n                    error: function(xhr, ajaxOptions, thrownError) {\r\n                        App.unblockUI(el);\r\n                        var msg = 'Error on reloading the content. Please check your connection and try again.';\r\n                        if (error == \"toastr\" && toastr) {\r\n                            toastr.error(msg);\r\n                        } else if (error == \"notific8\" && $.notific8) {\r\n                            $.notific8('zindex', 11500);\r\n                            $.notific8(msg, {\r\n                                theme: 'ruby',\r\n                                life: 3000\r\n                            });\r\n                        } else {\r\n                            alert(msg);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                // for demo purpose\r\n                App.blockUI({\r\n                    target: el,\r\n                    animate: true,\r\n                    overlayColor: 'none'\r\n                });\r\n                window.setTimeout(function() {\r\n                    App.unblockUI(el);\r\n                }, 1000);\r\n            }\r\n        });\r\n\r\n        // load ajax data on page init\r\n        $('.portlet .portlet-title a.reload[data-load=\"true\"]').click();\r\n\r\n        $('body').on('click', '.portlet > .portlet-title > .tools > .collapse, .portlet .portlet-title > .tools > .expand', function(e) {\r\n            e.preventDefault();\r\n            var el = $(this).closest(\".portlet\").children(\".portlet-body\");\r\n            if ($(this).hasClass(\"collapse\")) {\r\n                $(this).removeClass(\"collapse\").addClass(\"expand\");\r\n                el.slideUp(200);\r\n            } else {\r\n                $(this).removeClass(\"expand\").addClass(\"collapse\");\r\n                el.slideDown(200);\r\n            }\r\n        });\r\n    };\r\n    \r\n    // Handlesmaterial design checkboxes\r\n    var handleMaterialDesign = function() {\r\n\r\n        // Material design ckeckbox and radio effects\r\n        $('body').on('click', '.md-checkbox > label, .md-radio > label', function() {\r\n            var the = $(this);\r\n            // find the first span which is our circle/bubble\r\n            var el = $(this).children('span:first-child');\r\n              \r\n            // add the bubble class (we do this so it doesnt show on page load)\r\n            el.addClass('inc');\r\n              \r\n            // clone it\r\n            var newone = el.clone(true);  \r\n              \r\n            // add the cloned version before our original\r\n            el.before(newone);  \r\n              \r\n            // remove the original so that it is ready to run on next click\r\n            $(\".\" + el.attr(\"class\") + \":last\", the).remove();\r\n        }); \r\n\r\n        if ($('body').hasClass('page-md')) { \r\n            // Material design click effect\r\n            // credit where credit's due; http://thecodeplayer.com/walkthrough/ripple-click-effect-google-material-design       \r\n            var element, circle, d, x, y;\r\n            $('body').on('click', 'a.btn, button.btn, input.btn, label.btn', function(e) { \r\n                element = $(this);\r\n      \r\n                if(element.find(\".md-click-circle\").length == 0) {\r\n                    element.prepend(\"<span class='md-click-circle'></span>\");\r\n                }\r\n                    \r\n                circle = element.find(\".md-click-circle\");\r\n                circle.removeClass(\"md-click-animate\");\r\n                \r\n                if(!circle.height() && !circle.width()) {\r\n                    d = Math.max(element.outerWidth(), element.outerHeight());\r\n                    circle.css({height: d, width: d});\r\n                }\r\n                \r\n                x = e.pageX - element.offset().left - circle.width()/2;\r\n                y = e.pageY - element.offset().top - circle.height()/2;\r\n                \r\n                circle.css({top: y+'px', left: x+'px'}).addClass(\"md-click-animate\");\r\n\r\n                setTimeout(function() {\r\n                    circle.remove();      \r\n                }, 1000);\r\n            });\r\n        }\r\n\r\n        // Floating labels\r\n        var handleInput = function(el) {\r\n            if (el.val() != \"\") {\r\n                el.addClass('edited');\r\n            } else {\r\n                el.removeClass('edited');\r\n            }\r\n        } \r\n\r\n        $('body').on('keydown', '.form-md-floating-label .form-control', function(e) { \r\n            handleInput($(this));\r\n        });\r\n        $('body').on('blur', '.form-md-floating-label .form-control', function(e) { \r\n            handleInput($(this));\r\n        });        \r\n\r\n        $('.form-md-floating-label .form-control').each(function(){\r\n            if ($(this).val().length > 0) {\r\n                $(this).addClass('edited');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Handles custom checkboxes & radios using jQuery iCheck plugin\r\n    var handleiCheck = function() {\r\n        if (!$().iCheck) {\r\n            return;\r\n        }\r\n\r\n        $('.icheck').each(function() {\r\n            var checkboxClass = $(this).attr('data-checkbox') ? $(this).attr('data-checkbox') : 'icheckbox_minimal-grey';\r\n            var radioClass = $(this).attr('data-radio') ? $(this).attr('data-radio') : 'iradio_minimal-grey';\r\n\r\n            if (checkboxClass.indexOf('_line') > -1 || radioClass.indexOf('_line') > -1) {\r\n                $(this).iCheck({\r\n                    checkboxClass: checkboxClass,\r\n                    radioClass: radioClass,\r\n                    insert: '<div class=\"icheck_line-icon\"></div>' + $(this).attr(\"data-label\")\r\n                });\r\n            } else {\r\n                $(this).iCheck({\r\n                    checkboxClass: checkboxClass,\r\n                    radioClass: radioClass\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    // Handles Bootstrap switches\r\n    var handleBootstrapSwitch = function() {\r\n        if (!$().bootstrapSwitch) {\r\n            return;\r\n        }\r\n        $('.make-switch').bootstrapSwitch();\r\n    };\r\n\r\n    // Handles Bootstrap confirmations\r\n    var handleBootstrapConfirmation = function() {\r\n        if (!$().confirmation) {\r\n            return;\r\n        }\r\n        $('[data-toggle=confirmation]').confirmation({ btnOkClass: 'btn btn-sm btn-success', btnCancelClass: 'btn btn-sm btn-danger'});\r\n    }\r\n    \r\n    // Handles Bootstrap Accordions.\r\n    var handleAccordions = function() {\r\n        $('body').on('shown.bs.collapse', '.accordion.scrollable', function(e) {\r\n            App.scrollTo($(e.target));\r\n        });\r\n    };\r\n\r\n    // Handles Bootstrap Tabs.\r\n    var handleTabs = function() {\r\n        //activate tab if tab id provided in the URL\r\n        if (encodeURI(location.hash)) {\r\n            var tabid = encodeURI(location.hash.substr(1));\r\n            $('a[href=\"#' + tabid + '\"]').parents('.tab-pane:hidden').each(function() {\r\n                var tabid = $(this).attr(\"id\");\r\n                $('a[href=\"#' + tabid + '\"]').click();\r\n            });\r\n            $('a[href=\"#' + tabid + '\"]').click();\r\n        }\r\n\r\n        if ($().tabdrop) {\r\n            $('.tabbable-tabdrop .nav-pills, .tabbable-tabdrop .nav-tabs').tabdrop({\r\n                text: '<i class=\"fa fa-ellipsis-v\"></i>&nbsp;<i class=\"fa fa-angle-down\"></i>'\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handles Bootstrap Modals.\r\n    var handleModals = function() {        \r\n        // fix stackable modal issue: when 2 or more modals opened, closing one of modal will remove .modal-open class. \r\n        $('body').on('hide.bs.modal', function() {\r\n            if ($('.modal:visible').size() > 1 && $('html').hasClass('modal-open') === false) {\r\n                $('html').addClass('modal-open');\r\n            } else if ($('.modal:visible').size() <= 1) {\r\n                $('html').removeClass('modal-open');\r\n            }\r\n        });\r\n\r\n        // fix page scrollbars issue\r\n        $('body').on('show.bs.modal', '.modal', function() {\r\n            if ($(this).hasClass(\"modal-scroll\")) {\r\n                $('body').addClass(\"modal-open-noscroll\");\r\n            }\r\n        });\r\n\r\n        // fix page scrollbars issue\r\n        $('body').on('hidden.bs.modal', '.modal', function() {\r\n            $('body').removeClass(\"modal-open-noscroll\");\r\n        });\r\n\r\n        // remove ajax content and remove cache on modal closed \r\n        $('body').on('hidden.bs.modal', '.modal:not(.modal-cached)', function () {\r\n            $(this).removeData('bs.modal');\r\n        });\r\n    };\r\n\r\n    // Handles Bootstrap Tooltips.\r\n    var handleTooltips = function() {\r\n        // global tooltips\r\n        $('.tooltips').tooltip();\r\n\r\n        // portlet tooltips\r\n        $('.portlet > .portlet-title .fullscreen').tooltip({\r\n            trigger: 'hover',\r\n            container: 'body',\r\n            title: 'Fullscreen'\r\n        });\r\n        $('.portlet > .portlet-title > .tools > .reload').tooltip({\r\n            trigger: 'hover',\r\n            container: 'body',\r\n            title: 'Reload'\r\n        });\r\n        $('.portlet > .portlet-title > .tools > .remove').tooltip({\r\n            trigger: 'hover',\r\n            container: 'body',\r\n            title: 'Remove'\r\n        });\r\n        $('.portlet > .portlet-title > .tools > .config').tooltip({\r\n            trigger: 'hover',\r\n            container: 'body',\r\n            title: 'Settings'\r\n        });\r\n        $('.portlet > .portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand').tooltip({\r\n            trigger: 'hover',\r\n            container: 'body',\r\n            title: 'Collapse/Expand'\r\n        });\r\n    };\r\n\r\n    // Handles Bootstrap Dropdowns\r\n    var handleDropdowns = function() {\r\n        /*\r\n          Hold dropdown on click  \r\n        */\r\n        $('body').on('click', '.dropdown-menu.hold-on-click', function(e) {\r\n            e.stopPropagation();\r\n        });\r\n    };\r\n\r\n    var handleAlerts = function() {\r\n        $('body').on('click', '[data-close=\"alert\"]', function(e) {\r\n            $(this).parent('.alert').hide();\r\n            $(this).closest('.note').hide();\r\n            e.preventDefault();\r\n        });\r\n\r\n        $('body').on('click', '[data-close=\"note\"]', function(e) {\r\n            $(this).closest('.note').hide();\r\n            e.preventDefault();\r\n        });\r\n\r\n        $('body').on('click', '[data-remove=\"note\"]', function(e) {\r\n            $(this).closest('.note').remove();\r\n            e.preventDefault();\r\n        });\r\n    };\r\n\r\n    // Handle Hower Dropdowns\r\n    var handleDropdownHover = function() {\r\n        $('[data-hover=\"dropdown\"]').not('.hover-initialized').each(function() {\r\n            $(this).dropdownHover();\r\n            $(this).addClass('hover-initialized');\r\n        });\r\n    };\r\n\r\n    // Handle textarea autosize \r\n    var handleTextareaAutosize = function() {\r\n        if (typeof(autosize) == \"function\") {\r\n            autosize(document.querySelector('textarea.autosizeme'));\r\n        }\r\n    }\r\n\r\n    // Handles Bootstrap Popovers\r\n\r\n    // last popep popover\r\n    var lastPopedPopover;\r\n\r\n    var handlePopovers = function() {\r\n        $('.popovers').popover();\r\n\r\n        // close last displayed popover\r\n\r\n        $(document).on('click.bs.popover.data-api', function(e) {\r\n            if (lastPopedPopover) {\r\n                lastPopedPopover.popover('hide');\r\n            }\r\n        });\r\n    };\r\n\r\n    // Handles scrollable contents using jQuery SlimScroll plugin.\r\n    var handleScrollers = function() {\r\n        App.initSlimScroll('.scroller');\r\n    };\r\n\r\n    // Handles Image Preview using jQuery Fancybox plugin\r\n    var handleFancybox = function() {\r\n        if (!jQuery.fancybox) {\r\n            return;\r\n        }\r\n\r\n        if ($(\".fancybox-button\").size() > 0) {\r\n            $(\".fancybox-button\").fancybox({\r\n                groupAttr: 'data-rel',\r\n                prevEffect: 'none',\r\n                nextEffect: 'none',\r\n                closeBtn: true,\r\n                helpers: {\r\n                    title: {\r\n                        type: 'inside'\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handles counterup plugin wrapper\r\n    var handleCounterup = function() {\r\n        if (!$().counterUp) {\r\n            return;\r\n        }\r\n\r\n        $(\"[data-counter='counterup']\").counterUp({\r\n            delay: 10,\r\n            time: 1000\r\n        });\r\n    };\r\n\r\n    // Fix input placeholder issue for IE8 and IE9\r\n    var handleFixInputPlaceholderForIE = function() {\r\n        //fix html5 placeholder attribute for ie7 & ie8\r\n        if (isIE8 || isIE9) { // ie8 & ie9\r\n            // this is html5 placeholder fix for inputs, inputs with placeholder-no-fix class will be skipped(e.g: we need this for password fields)\r\n            $('input[placeholder]:not(.placeholder-no-fix), textarea[placeholder]:not(.placeholder-no-fix)').each(function() {\r\n                var input = $(this);\r\n\r\n                if (input.val() === '' && input.attr(\"placeholder\") !== '') {\r\n                    input.addClass(\"placeholder\").val(input.attr('placeholder'));\r\n                }\r\n\r\n                input.focus(function() {\r\n                    if (input.val() == input.attr('placeholder')) {\r\n                        input.val('');\r\n                    }\r\n                });\r\n\r\n                input.blur(function() {\r\n                    if (input.val() === '' || input.val() == input.attr('placeholder')) {\r\n                        input.val(input.attr('placeholder'));\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handle Select2 Dropdowns\r\n    var handleSelect2 = function() {\r\n        if ($().select2) {\r\n            $.fn.select2.defaults.set(\"theme\", \"bootstrap\");\r\n            $('.select2me').select2({\r\n                placeholder: \"Select\",\r\n                width: 'auto', \r\n                allowClear: true\r\n            });\r\n        }\r\n    };\r\n\r\n    // handle group element heights\r\n   var handleHeight = function() {\r\n       $('[data-auto-height]').each(function() {\r\n            var parent = $(this);\r\n            var items = $('[data-height]', parent);\r\n            var height = 0;\r\n            var mode = parent.attr('data-mode');\r\n            var offset = parseInt(parent.attr('data-offset') ? parent.attr('data-offset') : 0);\r\n\r\n            items.each(function() {\r\n                if ($(this).attr('data-height') == \"height\") {\r\n                    $(this).css('height', '');\r\n                } else {\r\n                    $(this).css('min-height', '');\r\n                }\r\n\r\n                var height_ = (mode == 'base-height' ? $(this).outerHeight() : $(this).outerHeight(true));\r\n                if (height_ > height) {\r\n                    height = height_;\r\n                }\r\n            });\r\n\r\n            height = height + offset;\r\n\r\n            items.each(function() {\r\n                if ($(this).attr('data-height') == \"height\") {\r\n                    $(this).css('height', height);\r\n                } else {\r\n                    $(this).css('min-height', height);\r\n                }\r\n            });\r\n\r\n            if(parent.attr('data-related')) {\r\n                $(parent.attr('data-related')).css('height', parent.height());\r\n            }\r\n       });       \r\n    }\r\n    \r\n    //* END:CORE HANDLERS *//\r\n\r\n    return {\r\n\r\n        //main function to initiate the theme\r\n        init: function() {\r\n            //IMPORTANT!!!: Do not modify the core handlers call order.\r\n\r\n            //Core handlers\r\n            handleInit(); // initialize core variables\r\n            handleOnResize(); // set and handle responsive    \r\n\r\n            //UI Component handlers     \r\n            handleMaterialDesign(); // handle material design       \r\n            handleiCheck(); // handles custom icheck radio and checkboxes\r\n            handleBootstrapSwitch(); // handle bootstrap switch plugin\r\n            handleScrollers(); // handles slim scrolling contents \r\n            handleFancybox(); // handle fancy box\r\n            handleSelect2(); // handle custom Select2 dropdowns\r\n            handlePortletTools(); // handles portlet action bar functionality(refresh, configure, toggle, remove)\r\n            handleAlerts(); //handle closabled alerts\r\n            handleDropdowns(); // handle dropdowns\r\n            handleTabs(); // handle tabs\r\n            handleTooltips(); // handle bootstrap tooltips\r\n            handlePopovers(); // handles bootstrap popovers\r\n            handleAccordions(); //handles accordions \r\n            handleModals(); // handle modals\r\n            handleBootstrapConfirmation(); // handle bootstrap confirmations\r\n            handleTextareaAutosize(); // handle autosize textareas\r\n            handleCounterup(); // handle counterup instances\r\n\r\n            //Handle group element heights\r\n            this.addResizeHandler(handleHeight); // handle auto calculating height on window resize\r\n\r\n            // Hacks\r\n            handleFixInputPlaceholderForIE(); //IE8 & IE9 input placeholder issue fix\r\n        },\r\n\r\n        //main function to initiate core javascript after ajax complete\r\n        initAjax: function() {\r\n            //handleUniform(); // handles custom radio & checkboxes     \r\n            handleiCheck(); // handles custom icheck radio and checkboxes\r\n            handleBootstrapSwitch(); // handle bootstrap switch plugin\r\n            handleDropdownHover(); // handles dropdown hover       \r\n            handleScrollers(); // handles slim scrolling contents \r\n            handleSelect2(); // handle custom Select2 dropdowns\r\n            handleFancybox(); // handle fancy box\r\n            handleDropdowns(); // handle dropdowns\r\n            handleTooltips(); // handle bootstrap tooltips\r\n            handlePopovers(); // handles bootstrap popovers\r\n            handleAccordions(); //handles accordions \r\n            handleBootstrapConfirmation(); // handle bootstrap confirmations\r\n        },\r\n\r\n        //init main components \r\n        initComponents: function() {\r\n            this.initAjax();\r\n        },\r\n\r\n        //public function to remember last opened popover that needs to be closed on click\r\n        setLastPopedPopover: function(el) {\r\n            lastPopedPopover = el;\r\n        },\r\n\r\n        //public function to add callback a function which will be called on window resize\r\n        addResizeHandler: function(func) {\r\n            resizeHandlers.push(func);\r\n        },\r\n\r\n        //public functon to call _runresizeHandlers\r\n        runResizeHandlers: function() {\r\n            _runResizeHandlers();\r\n        },\r\n\r\n        // wrApper function to scroll(focus) to an element\r\n        scrollTo: function(el, offeset) {\r\n            var pos = (el && el.size() > 0) ? el.offset().top : 0;\r\n\r\n            if (el) {\r\n                if ($('body').hasClass('page-header-fixed')) {\r\n                    pos = pos - $('.page-header').height();\r\n                } else if ($('body').hasClass('page-header-top-fixed')) {\r\n                    pos = pos - $('.page-header-top').height();\r\n                } else if ($('body').hasClass('page-header-menu-fixed')) {\r\n                    pos = pos - $('.page-header-menu').height();\r\n                }\r\n                pos = pos + (offeset ? offeset : -1 * el.height());\r\n            }\r\n\r\n            $('html,body').animate({\r\n                scrollTop: pos\r\n            }, 'slow');\r\n        },\r\n\r\n        initSlimScroll: function(el) {\r\n            if (!$().slimScroll) {\r\n                return;\r\n            }\r\n\r\n            $(el).each(function() {\r\n                if ($(this).attr(\"data-initialized\")) {\r\n                    return; // exit\r\n                }\r\n\r\n                var height;\r\n\r\n                if ($(this).attr(\"data-height\")) {\r\n                    height = $(this).attr(\"data-height\");\r\n                } else {\r\n                    height = $(this).css('height');\r\n                }\r\n\r\n                $(this).slimScroll({\r\n                    allowPageScroll: true, // allow page scroll when the element scroll is ended\r\n                    size: '7px',\r\n                    color: ($(this).attr(\"data-handle-color\") ? $(this).attr(\"data-handle-color\") : '#bbb'),\r\n                    wrapperClass: ($(this).attr(\"data-wrapper-class\") ? $(this).attr(\"data-wrapper-class\") : 'slimScrollDiv'),\r\n                    railColor: ($(this).attr(\"data-rail-color\") ? $(this).attr(\"data-rail-color\") : '#eaeaea'),\r\n                    position: isRTL ? 'left' : 'right',\r\n                    height: height,\r\n                    alwaysVisible: ($(this).attr(\"data-always-visible\") == \"1\" ? true : false),\r\n                    railVisible: ($(this).attr(\"data-rail-visible\") == \"1\" ? true : false),\r\n                    disableFadeOut: true\r\n                });\r\n\r\n                $(this).attr(\"data-initialized\", \"1\");\r\n            });\r\n        },\r\n\r\n        destroySlimScroll: function(el) {\r\n            if (!$().slimScroll) {\r\n                return;\r\n            }\r\n\r\n            $(el).each(function() {\r\n                if ($(this).attr(\"data-initialized\") === \"1\") { // destroy existing instance before updating the height\r\n                    $(this).removeAttr(\"data-initialized\");\r\n                    $(this).removeAttr(\"style\");\r\n\r\n                    var attrList = {};\r\n\r\n                    // store the custom attribures so later we will reassign.\r\n                    if ($(this).attr(\"data-handle-color\")) {\r\n                        attrList[\"data-handle-color\"] = $(this).attr(\"data-handle-color\");\r\n                    }\r\n                    if ($(this).attr(\"data-wrapper-class\")) {\r\n                        attrList[\"data-wrapper-class\"] = $(this).attr(\"data-wrapper-class\");\r\n                    }\r\n                    if ($(this).attr(\"data-rail-color\")) {\r\n                        attrList[\"data-rail-color\"] = $(this).attr(\"data-rail-color\");\r\n                    }\r\n                    if ($(this).attr(\"data-always-visible\")) {\r\n                        attrList[\"data-always-visible\"] = $(this).attr(\"data-always-visible\");\r\n                    }\r\n                    if ($(this).attr(\"data-rail-visible\")) {\r\n                        attrList[\"data-rail-visible\"] = $(this).attr(\"data-rail-visible\");\r\n                    }\r\n\r\n                    $(this).slimScroll({\r\n                        wrapperClass: ($(this).attr(\"data-wrapper-class\") ? $(this).attr(\"data-wrapper-class\") : 'slimScrollDiv'),\r\n                        destroy: true\r\n                    });\r\n\r\n                    var the = $(this);\r\n\r\n                    // reassign custom attributes\r\n                    $.each(attrList, function(key, value) {\r\n                        the.attr(key, value);\r\n                    });\r\n\r\n                }\r\n            });\r\n        },\r\n\r\n        // function to scroll to the top\r\n        scrollTop: function() {\r\n            App.scrollTo();\r\n        },\r\n\r\n        // wrApper function to  block element(indicate loading)\r\n        blockUI: function(options) {\r\n            options = $.extend(true, {}, options);\r\n            var html = '';\r\n            if (options.animate) {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\">' + '<div class=\"block-spinner-bar\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>' + '</div>';\r\n            } else if (options.iconOnly) {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\" align=\"\"></div>';\r\n            } else if (options.textOnly) {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><span>&nbsp;&nbsp;' + (options.message ? options.message : 'LOADING...') + '</span></div>';\r\n            } else {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\" align=\"\"><span>&nbsp;&nbsp;' + (options.message ? options.message : 'LOADING...') + '</span></div>';\r\n            }\r\n\r\n            if (options.target) { // element blocking\r\n                var el = $(options.target);\r\n                if (el.height() <= ($(window).height())) {\r\n                    options.cenrerY = true;\r\n                }\r\n                el.block({\r\n                    message: html,\r\n                    baseZ: options.zIndex ? options.zIndex : 1000,\r\n                    centerY: options.cenrerY !== undefined ? options.cenrerY : false,\r\n                    css: {\r\n                        top: '10%',\r\n                        border: '0',\r\n                        padding: '0',\r\n                        backgroundColor: 'none'\r\n                    },\r\n                    overlayCSS: {\r\n                        backgroundColor: options.overlayColor ? options.overlayColor : '#555',\r\n                        opacity: options.boxed ? 0.05 : 0.1,\r\n                        cursor: 'wait'\r\n                    }\r\n                });\r\n            } else { // page blocking\r\n                $.blockUI({\r\n                    message: html,\r\n                    baseZ: options.zIndex ? options.zIndex : 1000,\r\n                    css: {\r\n                        border: '0',\r\n                        padding: '0',\r\n                        backgroundColor: 'none'\r\n                    },\r\n                    overlayCSS: {\r\n                        backgroundColor: options.overlayColor ? options.overlayColor : '#555',\r\n                        opacity: options.boxed ? 0.05 : 0.1,\r\n                        cursor: 'wait'\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // wrApper function to  un-block element(finish loading)\r\n        unblockUI: function(target) {\r\n            if (target) {\r\n                $(target).unblock({\r\n                    onUnblock: function() {\r\n                        $(target).css('position', '');\r\n                        $(target).css('zoom', '');\r\n                    }\r\n                });\r\n            } else {\r\n                $.unblockUI();\r\n            }\r\n        },\r\n\r\n        startPageLoading: function(options) {\r\n            if (options && options.animate) {\r\n                $('.page-spinner-bar').remove();\r\n                $('body').append('<div class=\"page-spinner-bar\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>');\r\n            } else {\r\n                $('.page-loading').remove();\r\n                $('body').append('<div class=\"page-loading\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\"/>&nbsp;&nbsp;<span>' + (options && options.message ? options.message : 'Loading...') + '</span></div>');\r\n            }\r\n        },\r\n\r\n        stopPageLoading: function() {\r\n            $('.page-loading, .page-spinner-bar').remove();\r\n        },\r\n\r\n        alert: function(options) {\r\n\r\n            options = $.extend(true, {\r\n                container: \"\", // alerts parent container(by default placed after the page breadcrumbs)\r\n                place: \"append\", // \"append\" or \"prepend\" in container \r\n                type: 'success', // alert's type\r\n                message: \"\", // alert's message\r\n                close: true, // make alert closable\r\n                reset: true, // close all previouse alerts first\r\n                focus: true, // auto scroll to the alert after shown\r\n                closeInSeconds: 0, // auto close after defined seconds\r\n                icon: \"\" // put icon before the message\r\n            }, options);\r\n\r\n            var id = App.getUniqueID(\"App_alert\");\r\n\r\n            var html = '<div id=\"' + id + '\" class=\"custom-alerts alert alert-' + options.type + ' fade in\">' + (options.close ? '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\"></button>' : '') + (options.icon !== \"\" ? '<i class=\"fa-lg fa fa-' + options.icon + '\"></i>  ' : '') + options.message + '</div>';\r\n\r\n            if (options.reset) {\r\n                $('.custom-alerts').remove();\r\n            }\r\n\r\n            if (!options.container) {\r\n                if ($('.page-fixed-main-content').size() === 1) {\r\n                    $('.page-fixed-main-content').prepend(html);\r\n                } else if (($('body').hasClass(\"page-container-bg-solid\") || $('body').hasClass(\"page-content-white\")) && $('.page-head').size() === 0) {\r\n                    $('.page-title').after(html);\r\n                } else {\r\n                    if ($('.page-bar').size() > 0) {\r\n                        $('.page-bar').after(html);\r\n                    } else {\r\n                        $('.page-breadcrumb, .breadcrumbs').after(html);\r\n                    }\r\n                }\r\n            } else {\r\n                if (options.place == \"append\") {\r\n                    $(options.container).append(html);\r\n                } else {\r\n                    $(options.container).prepend(html);\r\n                }\r\n            }\r\n\r\n            if (options.focus) {\r\n                App.scrollTo($('#' + id));\r\n            }\r\n\r\n            if (options.closeInSeconds > 0) {\r\n                setTimeout(function() {\r\n                    $('#' + id).remove();\r\n                }, options.closeInSeconds * 1000);\r\n            }\r\n\r\n            return id;\r\n        },\r\n\r\n        //public function to initialize the fancybox plugin\r\n        initFancybox: function() {\r\n            handleFancybox();\r\n        },\r\n\r\n        //public helper function to get actual input value(used in IE9 and IE8 due to placeholder attribute not supported)\r\n        getActualVal: function(el) {\r\n            el = $(el);\r\n            if (el.val() === el.attr(\"placeholder\")) {\r\n                return \"\";\r\n            }\r\n            return el.val();\r\n        },\r\n\r\n        //public function to get a paremeter by name from URL\r\n        getURLParameter: function(paramName) {\r\n            var searchString = window.location.search.substring(1),\r\n                i, val, params = searchString.split(\"&\");\r\n\r\n            for (i = 0; i < params.length; i++) {\r\n                val = params[i].split(\"=\");\r\n                if (val[0] == paramName) {\r\n                    return unescape(val[1]);\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        // check for device touch support\r\n        isTouchDevice: function() {\r\n            try {\r\n                document.createEvent(\"TouchEvent\");\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        // To get the correct viewport width based on  http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\r\n        getViewPort: function() {\r\n            var e = window,\r\n                a = 'inner';\r\n            if (!('innerWidth' in window)) {\r\n                a = 'client';\r\n                e = document.documentElement || document.body;\r\n            }\r\n\r\n            return {\r\n                width: e[a + 'Width'],\r\n                height: e[a + 'Height']\r\n            };\r\n        },\r\n\r\n        getUniqueID: function(prefix) {\r\n            return 'prefix_' + Math.floor(Math.random() * (new Date()).getTime());\r\n        },\r\n\r\n        // check IE8 mode\r\n        isIE8: function() {\r\n            return isIE8;\r\n        },\r\n\r\n        // check IE9 mode\r\n        isIE9: function() {\r\n            return isIE9;\r\n        },\r\n\r\n        //check RTL mode\r\n        isRTL: function() {\r\n            return isRTL;\r\n        },\r\n\r\n        // check IE8 mode\r\n        isAngularJsApp: function() {\r\n            return (typeof angular == 'undefined') ? false : true;\r\n        },\r\n\r\n        getAssetsPath: function() {\r\n            return assetsPath;\r\n        },\r\n\r\n        setAssetsPath: function(path) {\r\n            assetsPath = path;\r\n        },\r\n\r\n        setGlobalImgPath: function(path) {\r\n            globalImgPath = path;\r\n        },\r\n\r\n        getGlobalImgPath: function() {\r\n            return assetsPath + globalImgPath;\r\n        },\r\n\r\n        setGlobalPluginsPath: function(path) {\r\n            globalPluginsPath = path;\r\n        },\r\n\r\n        getGlobalPluginsPath: function() {\r\n            return assetsPath + globalPluginsPath;\r\n        },\r\n\r\n        getGlobalCssPath: function() {\r\n            return assetsPath + globalCssPath;\r\n        },\r\n\r\n        // get layout color code by color name\r\n        getBrandColor: function(name) {\r\n            if (brandColors[name]) {\r\n                return brandColors[name];\r\n            } else {\r\n                return '';\r\n            }\r\n        },\r\n\r\n        getResponsiveBreakpoint: function(size) {\r\n            // bootstrap responsive breakpoints\r\n            var sizes = {\r\n                'xs' : 480,     // extra small\r\n                'sm' : 768,     // small\r\n                'md' : 992,     // medium\r\n                'lg' : 1200     // large\r\n            };\r\n\r\n            return sizes[size] ? sizes[size] : 0; \r\n        }\r\n    };\r\n\r\n}();\r\n\r\n<!-- END THEME LAYOUT SCRIPTS -->\r\n\r\njQuery(document).ready(function() {    \r\n   App.init(); // init metronic core componets\r\n});","/***\r\nWrapper/Helper Class for datagrid based on jQuery Datatable Plugin\r\n***/\r\nvar Datatable = function() {\r\n\r\n    var tableOptions; // main options\r\n    var dataTable; // datatable object\r\n    var table; // actual table jquery object\r\n    var tableContainer; // actual table container object\r\n    var tableWrapper; // actual table wrapper jquery object\r\n    var tableInitialized = false;\r\n    var ajaxParams = {}; // set filter mode\r\n    var the;\r\n\r\n    var countSelectedRecords = function() {\r\n        var selected = $('tbody > tr > td:nth-child(1) input[type=\"checkbox\"]:checked', table).size();\r\n        var text = tableOptions.dataTable.language.metronicGroupActions;\r\n        if (selected > 0) {\r\n            $('.table-group-actions > span', tableWrapper).text(text.replace(\"_TOTAL_\", selected));\r\n        } else {\r\n            $('.table-group-actions > span', tableWrapper).text(\"\");\r\n        }\r\n    };\r\n\r\n    return {\r\n\r\n        //main function to initiate the module\r\n        init: function(options) {\r\n\r\n            if (!$().dataTable) {\r\n                return;\r\n            }\r\n\r\n            the = this;\r\n\r\n            // default settings\r\n            options = $.extend(true, {\r\n                src: \"\", // actual table  \r\n                filterApplyAction: \"filter\",\r\n                filterCancelAction: \"filter_cancel\",\r\n                resetGroupActionInputOnSuccess: true,\r\n                loadingMessage: 'Loading...',\r\n                dataTable: {\r\n                    \"dom\": \"<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'<'table-group-actions pull-right'>>r><'table-responsive't><'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'>>\", // datatable layout\r\n                    \"pageLength\": 10, // default records per page\r\n                    \"language\": { // language settings\r\n                        // metronic spesific\r\n                        \"metronicGroupActions\": \"_TOTAL_ records selected:  \",\r\n                        \"metronicAjaxRequestGeneralError\": \"Could not complete request. Please check your internet connection\",\r\n\r\n                        // data tables spesific\r\n                        \"lengthMenu\": \"<span class='seperator'>|</span>View _MENU_ records\",\r\n                        \"info\": \"<span class='seperator'>|</span>Found total _TOTAL_ records\",\r\n                        \"infoEmpty\": \"No records found to show\",\r\n                        \"emptyTable\": \"No data available in table\",\r\n                        \"zeroRecords\": \"No matching records found\",\r\n                        \"paginate\": {\r\n                            \"previous\": \"Prev\",\r\n                            \"next\": \"Next\",\r\n                            \"last\": \"Last\",\r\n                            \"first\": \"First\",\r\n                            \"page\": \"Page\",\r\n                            \"pageOf\": \"of\"\r\n                        }\r\n                    },\r\n\r\n                    \"orderCellsTop\": true,\r\n                    \"columnDefs\": [{ // define columns sorting options(by default all columns are sortable extept the first checkbox column)\r\n                        'orderable': false,\r\n                        'targets': [0]\r\n                    }],\r\n\r\n                    \"pagingType\": \"bootstrap_extended\", // pagination type(bootstrap, bootstrap_full_number or bootstrap_extended)\r\n                    \"autoWidth\": false, // disable fixed width and enable fluid table\r\n                    \"processing\": false, // enable/disable display message box on record load\r\n                    \"serverSide\": true, // enable/disable server side ajax loading\r\n\r\n                    \"ajax\": { // define ajax settings\r\n                        \"url\": \"\", // ajax URL\r\n                        \"type\": \"POST\", // request type\r\n                        \"timeout\": 20000,\r\n                        \"data\": function(data) { // add request parameters before submit\r\n                            $.each(ajaxParams, function(key, value) {\r\n                                data[key] = value;\r\n                            });\r\n                            App.blockUI({\r\n                                message: tableOptions.loadingMessage,\r\n                                target: tableContainer,\r\n                                overlayColor: 'none',\r\n                                cenrerY: true,\r\n                                boxed: true\r\n                            });\r\n                        },\r\n                        \"dataSrc\": function(res) { // Manipulate the data returned from the server\r\n                            if (res.customActionMessage) {\r\n                                App.alert({\r\n                                    type: (res.customActionStatus == 'OK' ? 'success' : 'danger'),\r\n                                    icon: (res.customActionStatus == 'OK' ? 'check' : 'warning'),\r\n                                    message: res.customActionMessage,\r\n                                    container: tableWrapper,\r\n                                    place: 'prepend'\r\n                                });\r\n                            }\r\n\r\n                            if (res.customActionStatus) {\r\n                                if (tableOptions.resetGroupActionInputOnSuccess) {\r\n                                    $('.table-group-action-input', tableWrapper).val(\"\");\r\n                                }\r\n                            }\r\n\r\n                            if ($('.group-checkable', table).size() === 1) {\r\n                                $('.group-checkable', table).attr(\"checked\", false);\r\n                            }\r\n\r\n                            if (tableOptions.onSuccess) {\r\n                                tableOptions.onSuccess.call(undefined, the, res);\r\n                            }\r\n\r\n                            App.unblockUI(tableContainer);\r\n\r\n                            return res.data;\r\n                        },\r\n                        \"error\": function() { // handle general connection errors\r\n                            if (tableOptions.onError) {\r\n                                tableOptions.onError.call(undefined, the);\r\n                            }\r\n\r\n                            App.alert({\r\n                                type: 'danger',\r\n                                icon: 'warning',\r\n                                message: tableOptions.dataTable.language.metronicAjaxRequestGeneralError,\r\n                                container: tableWrapper,\r\n                                place: 'prepend'\r\n                            });\r\n\r\n                            App.unblockUI(tableContainer);\r\n                        }\r\n                    },\r\n\r\n                    \"drawCallback\": function(oSettings) { // run some code on table redraw\r\n                        if (tableInitialized === false) { // check if table has been initialized\r\n                            tableInitialized = true; // set table initialized\r\n                            table.show(); // display table\r\n                        }\r\n                        countSelectedRecords(); // reset selected records indicator\r\n\r\n                        // callback for ajax data load\r\n                        if (tableOptions.onDataLoad) {\r\n                            tableOptions.onDataLoad.call(undefined, the);\r\n                        }\r\n                    }\r\n                }\r\n            }, options);\r\n\r\n            tableOptions = options;\r\n\r\n            // create table's jquery object\r\n            table = $(options.src);\r\n            tableContainer = table.parents(\".table-container\");\r\n\r\n            // apply the special class that used to restyle the default datatable\r\n            var tmp = $.fn.dataTableExt.oStdClasses;\r\n\r\n            $.fn.dataTableExt.oStdClasses.sWrapper = $.fn.dataTableExt.oStdClasses.sWrapper + \" dataTables_extended_wrapper\";\r\n            $.fn.dataTableExt.oStdClasses.sFilterInput = \"form-control input-xs input-sm input-inline\";\r\n            $.fn.dataTableExt.oStdClasses.sLengthSelect = \"form-control input-xs input-sm input-inline\";\r\n\r\n            // initialize a datatable\r\n            dataTable = table.DataTable(options.dataTable);\r\n\r\n            // revert back to default\r\n            $.fn.dataTableExt.oStdClasses.sWrapper = tmp.sWrapper;\r\n            $.fn.dataTableExt.oStdClasses.sFilterInput = tmp.sFilterInput;\r\n            $.fn.dataTableExt.oStdClasses.sLengthSelect = tmp.sLengthSelect;\r\n\r\n            // get table wrapper\r\n            tableWrapper = table.parents('.dataTables_wrapper');\r\n\r\n            // build table group actions panel\r\n            if ($('.table-actions-wrapper', tableContainer).size() === 1) {\r\n                $('.table-group-actions', tableWrapper).html($('.table-actions-wrapper', tableContainer).html()); // place the panel inside the wrapper\r\n                $('.table-actions-wrapper', tableContainer).remove(); // remove the template container\r\n            }\r\n            // handle group checkboxes check/uncheck\r\n            $('.group-checkable', table).change(function() {\r\n                var set = table.find('tbody > tr > td:nth-child(1) input[type=\"checkbox\"]');\r\n                var checked = $(this).prop(\"checked\");\r\n                $(set).each(function() {\r\n                    $(this).prop(\"checked\", checked);\r\n                });\r\n                countSelectedRecords();\r\n            });\r\n\r\n            // handle row's checkbox click\r\n            table.on('change', 'tbody > tr > td:nth-child(1) input[type=\"checkbox\"]', function() {\r\n                countSelectedRecords();\r\n            });\r\n\r\n            // handle filter submit button click\r\n            table.on('click', '.filter-submit', function(e) {\r\n                e.preventDefault();\r\n                the.submitFilter();\r\n            });\r\n\r\n            // handle filter cancel button click\r\n            table.on('click', '.filter-cancel', function(e) {\r\n                e.preventDefault();\r\n                the.resetFilter();\r\n            });\r\n        },\r\n\r\n        submitFilter: function() {\r\n            the.setAjaxParam(\"action\", tableOptions.filterApplyAction);\r\n\r\n            // get all typeable inputs\r\n            $('textarea.form-filter, select.form-filter, input.form-filter:not([type=\"radio\"],[type=\"checkbox\"])', table).each(function() {\r\n                the.setAjaxParam($(this).attr(\"name\"), $(this).val());\r\n            });\r\n\r\n            // get all checkboxes\r\n            $('input.form-filter[type=\"checkbox\"]:checked', table).each(function() {\r\n                the.addAjaxParam($(this).attr(\"name\"), $(this).val());\r\n            });\r\n\r\n            // get all radio buttons\r\n            $('input.form-filter[type=\"radio\"]:checked', table).each(function() {\r\n                the.setAjaxParam($(this).attr(\"name\"), $(this).val());\r\n            });\r\n\r\n            dataTable.ajax.reload();\r\n        },\r\n\r\n        resetFilter: function() {\r\n            $('textarea.form-filter, select.form-filter, input.form-filter', table).each(function() {\r\n                $(this).val(\"\");\r\n            });\r\n            $('input.form-filter[type=\"checkbox\"]', table).each(function() {\r\n                $(this).attr(\"checked\", false);\r\n            });\r\n            the.clearAjaxParams();\r\n            the.addAjaxParam(\"action\", tableOptions.filterCancelAction);\r\n            dataTable.ajax.reload();\r\n        },\r\n\r\n        getSelectedRowsCount: function() {\r\n            return $('tbody > tr > td:nth-child(1) input[type=\"checkbox\"]:checked', table).size();\r\n        },\r\n\r\n        getSelectedRows: function() {\r\n            var rows = [];\r\n            $('tbody > tr > td:nth-child(1) input[type=\"checkbox\"]:checked', table).each(function() {\r\n                rows.push($(this).val());\r\n            });\r\n\r\n            return rows;\r\n        },\r\n\r\n        setAjaxParam: function(name, value) {\r\n            ajaxParams[name] = value;\r\n        },\r\n\r\n        addAjaxParam: function(name, value) {\r\n            if (!ajaxParams[name]) {\r\n                ajaxParams[name] = [];\r\n            }\r\n\r\n            skip = false;\r\n            for (var i = 0; i < (ajaxParams[name]).length; i++) { // check for duplicates\r\n                if (ajaxParams[name][i] === value) {\r\n                    skip = true;\r\n                }\r\n            }\r\n\r\n            if (skip === false) {\r\n                ajaxParams[name].push(value);\r\n            }\r\n        },\r\n\r\n        clearAjaxParams: function(name, value) {\r\n            ajaxParams = {};\r\n        },\r\n\r\n        getDataTable: function() {\r\n            return dataTable;\r\n        },\r\n\r\n        getTableWrapper: function() {\r\n            return tableWrapper;\r\n        },\r\n\r\n        gettableContainer: function() {\r\n            return tableContainer;\r\n        },\r\n\r\n        getTable: function() {\r\n            return table;\r\n        }\r\n\r\n    };\r\n\r\n};"],"sourceRoot":"/source/"}